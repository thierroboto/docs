{
  "openapi": "3.0.1",
  "info": {
    "title": "Winston AI API",
    "description": "Winston AI API specification",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.gowinston.ai/functions/v1"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/predict": {
      "post": {
        "description": "The Human Score is a metric used by Winston AI to estimate the likelihood that a given piece of content was generated by an AI tool versus being written by a human.",
        "requestBody": {
          "description": "test",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Predict"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Prediction response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Predict-response"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/plagiarism": {
      "post": {
        "description": "Winston AI's plagiarism API is a powerful tool designed to check text for plagiarism by scouring the internet for similar content. It queries multiple websites and compares the input text with the content found on these websites. This can be particularly useful in academic settings, content creation, legal scenarios or any other situation where originality of content is required.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Plagiarism"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Plagiarism response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plagiarism-response"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Predict": {
        "required": ["text"],
        "type": "object",
        "properties": {
          "text": {
            "description": "The text to scan. Minimum 300 characters. Texts under 600 characters may produce unreliable results and should be avoided. Maximum 100 000 characters per request.",
            "type": "string"
          },
          "version": {
            "description": "The model version to use. Our latest and most accurate version is \"3.0\". Using \"latest\" will make sure you are always using the latest version. Options: 3.0, 2.0, latest. Default: 2.0.",
            "type": "string"
          },
          "sentences": {
            "description": "Whether the response should include an array of sentences and their scores. Default: true.",
            "type": "boolean"
          },
          "language": {
            "description": "2 letter language code. At this time, the API is only available in english (en), french (fr), spanish (es), portuguese (pt) and german (de). default: en. Optional.",
            "type": "string"
          }
        }
      },
      "Predict-response": {
        "type": "object",
        "properties": {
          "status": {
            "description": "This is a standard HTTP status code. A 200 status means the request was successful.",
            "type": "integer"
          },
          "score": {
            "description": "A \"human\" score between 0 and 100. A low score means our system believes that the text is written by AI, and a higher score means that the system believes that the text is written by a Human.",
            "type": "boolean"
          },
          "sentences": {
            "description": "This is an array of sentence objects. Each object contains two fields: text and score. Please note that assessments on smaller samples are less accurate than the general score.",
            "type": "object",
            "properties": {
              "text": {
                "description": "The text field contains the actual text of the sentence that was analyzed.",
                "type": "string"
              },
              "score": {
                "description": "The score field within each sentence object indicates the sentiment score assigned to that particular sentence by the AI.",
                "type": "integer"
              }
            }
          },
          "credits_used": {
            "description": "The credits_used field represents the number of credits consumed for processing your request. Each word that is processed by the API consumes one credit.",
            "type": "integer"
          },
          "credits_remaining": {
            "description": "The credits_remaining field shows how many credits you have left in your account after your request has been processed.",
            "type": "integer"
          }
        }
      },
      "Plagiarism": {
        "required": ["text"],
        "type": "object",
        "properties": {
          "text": {
            "description": "The text to scan. Minimum 300 characters. Maximum 100 000 characters.",
            "type": "string"
          }
        }
      },
      "Plagiarism-response": {
        "type": "object",
        "properties": {
          "status": {
            "description": "This is a standard HTTP status code. A 200 status means the request was successful.",
            "type": "integer"
          },
          "results": {
            "description": "The results field is an array which contains one or more objects, each corresponding to a different website where matching content has been found. Each object includes the following fields:",
            "type": "object",
            "properties": {
              "title": {
                "description": "The title field provides the title of the webpage where matching content has been found.",
                "type": "string"
              },
              "url": {
                "description": "The url field gives the URL of the webpage where matching content has been found.",
                "type": "string"
              },
              "excerpts": {
                "description": "The excerpts field is an array which contains snippets of text from the webpage that match the input text.",
                "type": "object"
              },
              "date": {
                "description": "The date of publication of the result. The date format may vary from one result to another.",
                "type": "string"
              }
            }
          },
          "results_count": {
            "description": "The results_count field indicates the total number of matching websites found by the Plagiarism API.",
            "type": "integer"
          },
          "credits_used": {
            "description": "The credits_used field represents the number of credits consumed for processing your request. Each word that is processed by the API consumes two credits.",
            "type": "integer"
          },
          "credits_remaining": {
            "description": "The credits_remaining field shows how many credits you have left in your account after your request has been processed.",
            "type": "integer"
          }
        }
      },
      "Error": {
        "required": ["error"],
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
